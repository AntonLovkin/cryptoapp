{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Exchanges.jsx","components/Homepage.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","Text","Typography","Panel","Collapse","Exchanges","data","isFetching","exchangesList","exchanges","span","map","exchange","showArrow","header","rank","iconUrl","name","millify","volume","numberOfMarkets","marketShare","id","HTMLReactParser","description","Homepage","globalStats","stats","title","value","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","gutter","currency","xs","sm","lg","extra","alt","hoverable","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.d27e84f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, {useState, useEffect} from \"react\";\r\nimport { Button, Menu, Typography, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons'\r\n\r\n\r\nimport icon from '../images/cryptocurrency.png'\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n    const [screenSize, setScreenSize] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        handleResize();\r\n        return () => window.removeEventListener('resize', handleResize)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (screenSize < 768) {\r\n            setActiveMenu(false);\r\n        } else {\r\n            setActiveMenu(true);\r\n        }\r\n    }, [screenSize]);\r\n\r\n    return (\r\n        <div className='nav-container'>\r\n            <div className='logo-container'>\r\n                <Avatar src={icon} size='large' />\r\n                <Typography.Title level={2} className='logo'>\r\n                    <Link to='/'>Cryptoverse</Link>\r\n                </Typography.Title>\r\n                <Button className='menu-control-container' onClick={()=>setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined />\r\n                </Button>\r\n            </div>\r\n            {activeMenu && (\r\n                <Menu theme='dark' onClick={()=>setActiveMenu(!activeMenu)}>\r\n                    <Menu.Item key='1' icon={<HomeOutlined />}>\r\n                        <Link to='/'>Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined />}>\r\n                        <Link to='/cryptocurrencies'>Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                        <Link to='/exchanges'>Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined />}>\r\n                        <Link to='/news'>News</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': '09c8cd5556mshf452fb7fdbdcba4p11c949jsn76fcac44ba98'\r\n}\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com'\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders})\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`)\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest(`/exchanges`)\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`)\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({coinId, timePeriod}) => createRequest(`/coin/${coinId}/history/${timePeriod}`)\r\n        }), \r\n    })\r\n})\r\n\r\nexport const {\r\n    useGetCryptosQuery,\r\n    useGetCryptoDetailsQuery,\r\n    useGetCryptoHistoryQuery,\r\n    useGetExchangesQuery\r\n} = cryptoApi","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='loader'>\r\n            <Spin />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n    const { data, isFetching } = useGetExchangesQuery();\r\n    const exchangesList = data?.data?.exchanges;\r\n   \r\n    if (isFetching) return <Loader />\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={6}>Exchanges</Col>\r\n                <Col span={6}>24h Trade Volume</Col>\r\n                <Col span={6}>Markets</Col>\r\n                <Col span={6}>Change</Col>\r\n            </Row>\r\n            <Row>\r\n                {exchangesList.map((exchange) => (\r\n                    <Col span={24}>\r\n                        <Collapse>\r\n                            <Panel\r\n                                key={exchange.id}\r\n                                showArrow={false}\r\n                                header={(\r\n                                    <Row key={exchange.id}>\r\n                                        <Col span={6}>\r\n                                            <Text><strong>{exchange.rank}.</strong></Text>\r\n                                            <Avatar className='exchange-image' src={exchange.iconUrl} />\r\n                                            <Text><strong>{exchange.name}</strong></Text>\r\n                                        </Col>\r\n                                        <Col span={6}>${millify(exchange.volume)}</Col>\r\n                                        <Col span={6}>${millify(exchange.numberOfMarkets)}</Col>\r\n                                        <Col span={6}>${millify(exchange.marketShare)}%</Col>\r\n                                    </Row>\r\n                                )}\r\n                            >\r\n                                {HTMLReactParser(exchange.description || '')}\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </Col>\r\n            ))}\r\n            </Row>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Exchanges\r\n\r\n","import React from 'react'\r\nimport millify from 'millify'\r\nimport { Typography, Row, Col, Statistic } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport {useGetCryptosQuery} from '../services/cryptoApi'\r\n\r\nimport { Cryptocurrencies, News} from '../components'\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n    const { data, isFetching } = useGetCryptosQuery(10)\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if (isFetching) return 'Loading...';\r\n\r\n    return (\r\n        <>\r\n            <Title level={2} className='heading'>\r\n                Global Crypto Stats\r\n            </Title>\r\n            <Row>\r\n                <Col span={12}><Statistic title='Total Cryptocurrencies' value={globalStats.total} /></Col>\r\n                <Col span={12}><Statistic title='Total Exchanges' value={millify(globalStats.totalExchanges)} /></Col>\r\n                <Col span={12}><Statistic title='Total Market Cap' value={millify(globalStats.totalMarketCap)} /></Col>\r\n                <Col span={12}><Statistic title='Total 24h Volume' value={millify(globalStats.total24hVolume)} /></Col>\r\n                <Col span={12}><Statistic title='Total Markets' value={millify(globalStats.totalMarkets)} /></Col>\r\n            </Row>\r\n            <div className='home-heading-container'>\r\n                <Title level={2} className='home-title'>Top 10 Cryptocurrencies</Title>\r\n                <Title level={3} className='show-more'><Link to='cryptocurrencies'>Show More</Link></Title>\r\n            </div>\r\n            <Cryptocurrencies simplified />\r\n            <div className='home-heading-container'>\r\n                <Title level={2} className='home-title'>Latest Crypto News</Title>\r\n                <Title level={3} className='show-more'><Link to='news'>Show More</Link></Title>\r\n            </div>\r\n            <News simplified />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React, {useState, useEffect} from 'react'\r\nimport millify from 'millify'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Row, Col, Input } from 'antd'\r\n\r\n\r\nimport {useGetCryptosQuery} from '../services/cryptoApi'\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n    const count = simplified ? 10: 100\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    useEffect(() => {\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n        setCryptos(filteredData)\r\n    }, [cryptosList, searchTerm]\r\n    )\r\n\r\n    if (isFetching) return 'Loading...'\r\n\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n            <div className='search-crypto'>\r\n                <Input placeholder='Search Cryptocurrency' onChange={(e) => setSearchTerm(e.target.value)} />\r\n            </div>\r\n            )}\r\n            <Row gutter={[32, 32]} className='crypto-card-container'>\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6} className='crypto-card' key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card\r\n                                title={`${currency.rank}. ${currency.name}`}\r\n                                extra={<img className='crypto-image' src={currency.iconUrl} alt='' />}\r\n                                hoverable\r\n                            >\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react';\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n    const coinPrice = [];\r\n    const coinTimestamp = [];\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n        coinPrice.push(coinHistory.data.history[i].price);\r\n        coinTimestamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString())\r\n    }\r\n\r\n    const data = {\r\n        labels: coinTimestamp,\r\n        datasets: [\r\n            {\r\n                label: 'Price in USD',\r\n                data: coinPrice,\r\n                fill: false,\r\n                backgroundColor: '#0071bd',\r\n                borderColor: '#0071bd'\r\n            }\r\n        ]\r\n    }\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='chart-header'>\r\n                <Title level={2} className='chart-title'>\r\n                    {coinName} Price Chart\r\n                </Title>\r\n                <Col className='price-container'>\r\n                    <Title level={5} className='price-change'>\r\n                        {coinHistory?.data?.change}%\r\n                    </Title>\r\n                    <Title level={5} className='current-price'>\r\n                       Current {coinName} Price: $ {currentPrice}\r\n                    </Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart\r\n","import React, {useState} from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from \"antd\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from '@ant-design/icons'\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from \"../services/cryptoApi\";\r\nimport LineChart from \"./LineChart\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timePeriod, setTimePeriod] = useState('7d');\r\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId)\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({coinId, timePeriod})\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    if(isFetching) return <Loader />\r\n        \r\n    const time = ['24h', '7d', '30d', '1y', '5y'];\r\n\r\n  const stats = [\r\n    {\r\n      title: 'Price to USD',\r\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: '24h Volume',\r\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: 'Market Cap',\r\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'All-time-high(daily avg.)',\r\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: 'Number Of Markets',\r\n      value: cryptoDetails.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: 'Number Of Exchanges',\r\n      value: cryptoDetails.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: 'Aprroved Supply',\r\n      value: cryptoDetails.approvedSupply ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'Total Supply',\r\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'Circulating Supply',\r\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n\r\n    return (\r\n        <Col className='coin-detail-container'>\r\n            <Col className='coin-heading-container'>\r\n                <Title level={2} className='coin-name'>\r\n                    {cryptoDetails.name} ({cryptoDetails.slug} Price)\r\n                </Title>\r\n                <p>\r\n                    {cryptoDetails.name} live price in US dollars.\r\n                    View value statistics, market cap and supply.\r\n                </p>\r\n            </Col>\r\n            <Select\r\n                defaultValue='7d'\r\n                className='select-timeperiod'\r\n                placeholder='Select Time Period'\r\n                onChange={(value) => setTimePeriod(value)}\r\n            >\r\n                {time.map((date) => <Option key={date}>{date}</Option>\r\n                )}\r\n            </Select>\r\n\r\n            <LineChart\r\n                coinHistory={coinHistory}\r\n                currentPrice={millify(cryptoDetails.price)}\r\n                coinName={cryptoDetails.name}\r\n            />\r\n            \r\n            <Col className='stats-container'>\r\n                <Col className='coin-value-statistics'>\r\n                    <Col className='coin-value-statistics-heading'>\r\n                        <Title level={3} className='coin-details-heading'>\r\n                            {cryptoDetails.name} Value Statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of {cryptoDetails.name}\r\n                        </p>\r\n                    </Col>\r\n                    {stats.map(({ icon, title, value }) => (\r\n                        <Col className='coin-stats'>\r\n                            <Col className='coin-stats-name'>\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className='stats'>{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n                <Col className='other-stats-info'>\r\n                    <Col className='coin-value-statistics-heading'>\r\n                        <Title level={3} className='coin-details-heading'>\r\n                            Other Statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of all cryptocurrencies\r\n                        </p>\r\n                    </Col>\r\n                    {genericStats.map(({ icon, title, value }) => (\r\n                        <Col className='coin-stats'>\r\n                            <Col className='coin-stats-name'>\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className='stats'>{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n            <Col className='coin-desc-link'>\r\n                <Row className='coin-desc'>\r\n                    <Title level={3} className='coin-details-heading'>\r\n                        What is {cryptoDetails.name}\r\n                        {HTMLReactParser(cryptoDetails.description)}\r\n                    </Title>\r\n                </Row>\r\n                <Col className='coin-links'>\r\n                    <Title level={3} className='coin-details-heading'>\r\n                        {cryptoDetails.name} Links\r\n                    </Title>\r\n                    {cryptoDetails.links.map((link) => (\r\n                        <Row className='coin-link' key={link.name}>\r\n                            <Title level={3} className='link-name'>\r\n                                {link.type}\r\n                            </Title>\r\n                            <a href={link.url} target='_blank' rel='noreferrer'>\r\n                                {link.name}\r\n                            </a>\r\n                        </Row>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoNewsHeaders = {\r\n  'x-bingapis-sdk': 'true',\r\n  'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n  'x-rapidapi-key': '09c8cd5556mshf452fb7fdbdcba4p11c949jsn76fcac44ba98'\r\n};\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com'\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders})\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({newsCategory, count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\r\n        })\r\n    \r\n    })\r\n})\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi","import React, { useState} from 'react'\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from 'moment'\r\n\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport Loader from './Loader';\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nconst News = ({ simplified }) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\r\n    const {data: cryptoNews} = useGetCryptoNewsQuery({ newsCategory, count: simplified? 6 : 12})\r\n    const { data } = useGetCryptosQuery(100)\r\n   if(!cryptoNews?.value) return <Loader />\r\n    \r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n            {!simplified && (\r\n                <Col span={24}>\r\n                    <Select\r\n                        showSearch\r\n                        className='select-news'\r\n                        placeholder='Select a Crypto'\r\n                        optionFilterProp='children'\r\n                        onChange={(value) => setNewsCategory(value)}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase())}\r\n                    >\r\n                        <Option value='Cryptocurrency'>Cryptocurrency</Option>\r\n                        {data?.data?.coins.map((coin)=> <Option value={coin.name}>{coin.name}</Option>)}\r\n                    </Select>\r\n                </Col>\r\n            )}\r\n            {cryptoNews.value.map((news, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className='news-card'>\r\n                        <a href={news.url} target='_blank' rel=\"noreferrer\">\r\n                            <div className='news-image-container'>\r\n                                <Title className='news-title' level={4}>{news.name}</Title>\r\n                                <img style={{ maxWidth: '200px', maxHeight: '100px'}} src={news?.image?.thumbnail?.contentUrl || demoImage} alt='news' />\r\n                            </div>\r\n                            <p>\r\n                                {news.description > 100\r\n                                    ? `${news.description.substring(0, 100)}...`\r\n                                    : news.description\r\n                                }\r\n                            </p>\r\n                            <div className='price-container'>\r\n                                <div>\r\n                                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt='' />\r\n                                  <Text className='provider-name'>{news.provider[0]?.name}</Text>\r\n                                </div>\r\n                                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react';\r\nimport {Switch, Route, Link } from 'react-router-dom';\r\nimport { Layout, Typography, Space } from 'antd'\r\n\r\nimport { Navbar, Exchanges, Homepage, Cryptocurrencies, News, CryptoDetails } from './components'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='app'>\r\n            <div className='navbar'>\r\n                <Navbar />\r\n            </div>\r\n            <div className='main'>\r\n                <Layout>\r\n                    <div className='routes'>\r\n                        <Switch>\r\n                            <Route exact path='/'>\r\n                                <Homepage />\r\n                            </Route>\r\n                            <Route path='/exchanges'>\r\n                                <Exchanges />\r\n                            </Route>\r\n                            <Route exact path='/cryptocurrencies'>\r\n                                <Cryptocurrencies />\r\n                            </Route>\r\n                            <Route exact path='/crypto/:coinId'>\r\n                                <CryptoDetails />\r\n                            </Route>\r\n                            <Route exact path='/news'>\r\n                                <News />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Layout>\r\n            \r\n            <div className='footer'>\r\n                <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>\r\n                    Cryptoverse <br />\r\n                    All rights reserved\r\n                </Typography.Title>\r\n                <Space>\r\n                    <Link to='/'>Home</Link>\r\n                    <Link to='/exchanges'>Exchanges</Link>\r\n                    <Link to='/news'>News</Link>\r\n                </Space>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer\r\n    },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './app/store';\nimport 'antd/dist/antd.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}